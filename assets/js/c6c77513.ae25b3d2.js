"use strict";(self.webpackChunkdevsite=self.webpackChunkdevsite||[]).push([[6458],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=s(r),m=a,f=p["".concat(c,".").concat(m)]||p[m]||u[m]||i;return r?n.createElement(f,l(l({ref:t},d),{},{components:r})):n.createElement(f,l({ref:t},d))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},865:function(e,t,r){r.r(t),r.d(t,{default:function(){return u},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return s}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),l=["components"],o={id:"C",sidebar_title:"C",title:"C Interface"},c={unversionedId:"didkit-packages/C",id:"didkit-packages/C",isDocsHomePage:!1,title:"C Interface",description:"At a Glance",source:"@site/docs/didkit-packages/C.md",sourceDirName:"didkit-packages",slug:"/didkit-packages/C",permalink:"/docs/didkit-packages/C",editUrl:"https://github.com/spruceid/spruceid.dev/edit/main/docs/didkit-packages/C.md",version:"current",frontMatter:{id:"C",sidebar_title:"C",title:"C Interface"},sidebar:"docs",previous:{title:"Rust Crate",permalink:"/docs/didkit-packages/rust"},next:{title:"Java & Android",permalink:"/docs/didkit-packages/java"}},s=[{value:"At a Glance",id:"at-a-glance",children:[]},{value:"Installation",id:"installation",children:[{value:"Build",id:"build",children:[]},{value:"Test",id:"test",children:[]}]},{value:"Examples",id:"examples",children:[]}],d={toc:s};function u(e){var t=e.components,r=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"at-a-glance"},"At a Glance"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Of all the interfaces DIDKit exposes, the C library is closest to the Rust original.  "),(0,i.kt)("li",{parentName:"ul"},"For a quick function & type reference, you can study the ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/spruceid/didkit/lib/c/test.c"},"test.c file"),". "),(0,i.kt)("li",{parentName:"ul"},"A C header file can be built, but it resides in a separate crate that must be compiled separately after building DIDKit. Instructions can be found ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/spruceid/didkit/lib/cbindings/README.md"},"here")),(0,i.kt)("li",{parentName:"ul"},"All the low-level calls that DIDKit exposes for C are documented in the ",(0,i.kt)("a",{parentName:"li",href:"https://rust.didkit.dev/didkit/c/index.html"},"C-module section")," of the ",(0,i.kt)("a",{parentName:"li",href:"https://rust.didkit.dev/didkit"},"Rust documentation"),". "),(0,i.kt)("li",{parentName:"ul"},"To build manually and just for Android, building from the C wrapper is faster and simpler than going through Flutter; for instructions, see the Android section below.")),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("p",null,"Install Rust and DIDKit ",(0,i.kt)("a",{parentName:"p",href:"/docs/didkit/install/#manual"},"as usual")," and then: "),(0,i.kt)("h3",{id:"build"},"Build"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# from DIDKit root directory:\n$ make -C lib ../target/release/libdidkit.so\n")),(0,i.kt)("h3",{id:"test"},"Test"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# from DIDKit root directory:\n$ make -C lib ../target/test/c.stamp\n")),(0,i.kt)("p",null,"More detailed C tests can be found in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/spruceid/didkit/blob/main/lib/c/test.c"},"C\nlibrary")," of the\nDIDKit repository on GitHub. This doubles as a comprehensive code snippet\ndemonstrating key calls and responses in C."),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Tool"),(0,i.kt)("th",{parentName:"tr",align:null},"Example"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"C wrapper"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/spruceid/didkit/blob/main/lib/c/test.c"},"Test file"))))))}u.isMDXComponent=!0}}]);