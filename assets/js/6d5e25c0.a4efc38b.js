"use strict";(self.webpackChunkdevsite=self.webpackChunkdevsite||[]).push([[4225],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>k});var i=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,i,r=function(e,t){if(null==e)return{};var a,i,r={},n=Object.keys(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=i.createContext({}),s=function(e){var t=i.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=s(e.components);return i.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,o=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),u=s(a),k=r,m=u["".concat(o,".").concat(k)]||u[k]||c[k]||n;return a?i.createElement(m,l(l({ref:t},p),{},{components:a})):i.createElement(m,l({ref:t},p))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,l=new Array(n);l[0]=u;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d.mdxType="string"==typeof e?e:r,l[1]=d;for(var s=2;s<n;s++)l[s]=a[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6041:(e,t,a)=>{a.r(t),a.d(t,{default:()=>s,frontMatter:()=>n,metadata:()=>l,toc:()=>d});var i=a(7462),r=(a(7294),a(3905));const n={id:"java",title:"Java & Android",sidebar_title:"JVM"},l={unversionedId:"didkit-packages/java",id:"didkit-packages/java",isDocsHomePage:!1,title:"Java & Android",description:"[path-packages]//dart.dev/tools/pub/dependencies#path-packages",source:"@site/docs/didkit-packages/java.md",sourceDirName:"didkit-packages",slug:"/didkit-packages/java",permalink:"/docs/didkit-packages/java",editUrl:"https://github.com/spruceid/spruceid.dev/edit/main/docs/didkit-packages/java.md",version:"current",frontMatter:{id:"java",title:"Java & Android",sidebar_title:"JVM"},sidebar:"docs",previous:{title:"C Interface",permalink:"/docs/didkit-packages/C"},next:{title:"Python",permalink:"/docs/didkit-packages/python"}},d=[{value:"At a Glance",id:"at-a-glance",children:[]},{value:"Installation",id:"installation",children:[{value:"Build",id:"build",children:[]},{value:"Test",id:"test",children:[]},{value:"+ Android",id:"-android",children:[]}]},{value:"Android",id:"android",children:[{value:"Requires",id:"requires",children:[]},{value:"Build",id:"build-1",children:[]}]},{value:"Examples",id:"examples",children:[]}],o={toc:d};function s(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,i.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Both Java and Android developers access DIDKit through the Java bindings."),(0,r.kt)("h2",{id:"at-a-glance"},"At a Glance"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"DIDKit exposes a straightforward set of Java bindings, using the Java Native Interface (",(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Java_Native_Interface"},"JNI"),").  "),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/JAR_(file_format)"},"JAR")," file includes all of DIDKit's Java class files. To use this in an\napplication, you must also include the shared library (",(0,r.kt)("inlineCode",{parentName:"li"},"libdidkit.so"),") in your\napplication in the Java library path"),(0,r.kt)("li",{parentName:"ul"},"For a quick function & type reference, you can study the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/spruceid/didkit/lib/java/test/com/spruceid/DIDKitTest.java"},"DIDKitTest.java\nfile"),". "),(0,r.kt)("li",{parentName:"ul"},"All the low-level calls that the Rust library exposes to JNI are documented in the\n",(0,r.kt)("a",{parentName:"li",href:"https://rust.didkit.dev/didkit/jni/index.html"},"JNI section")," of the ",(0,r.kt)("a",{parentName:"li",href:"https://rust.didkit.dev/didkit"},"Rust\ndocumentation"),". ")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Install Rust and DIDKit ",(0,r.kt)("a",{parentName:"p",href:"/docs/didkit/install/#manual"},"as usual")," and then: "),(0,r.kt)("h3",{id:"build"},"Build"),(0,r.kt)("p",null,"Run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# from DIDKit root directory:\n$ make -C lib ../target/didkit.jar\n")),(0,r.kt)("p",null,"To build the shared library for your current platform/architecture:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# from DIDKit root directory:\n$ make -C lib ../target/release/libdidkit.so\n")),(0,r.kt)("h3",{id:"test"},"Test"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# from DIDKit root directory:\n$ make -C lib ../target/tests/java.stamp\n")),(0,r.kt)("h3",{id:"-android"},"+ Android"),(0,r.kt)("p",null,"For Android, build the separate ",(0,r.kt)("a",{parentName:"p",href:"#android"},"Android library (AAR file)")," which includes the Java class files and shared libraries for all Android targets."),(0,r.kt)("h2",{id:"android"},"Android"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/studio/projects/android-library.html#aar-contents"},"Android Library (AAR file)")," for DIDKit. The AAR file includes Java class files using ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Java_Native_Interface"},"JNI"),", and binary shared libraries for Android's supported architectures (x86, armeabi-v7a, arm64-v8a, x86","_","64). The AAR can be added to existing Android projects using Android Studio or Gradle."),(0,r.kt)("h3",{id:"requires"},"Requires"),(0,r.kt)("p",null,"Android SDK and NDK for Linux x86","_","64. The Android SDK is expected to be installed at ",(0,r.kt)("inlineCode",{parentName:"p"},"~/Android/Sdk"),". If it is somewhere else instead, you can specify it with a Make variable, e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"make ANDROID_SDK_ROOT=/other/location/android-sdk"),". "),(0,r.kt)("p",null,"Rust Android targets are also required. To install those with ",(0,r.kt)("inlineCode",{parentName:"p"},"rustup"),", run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"//from root directory of didkit project\n$ make -C lib install-rustup-android\n")),(0,r.kt)("h3",{id:"build-1"},"Build"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"//from root directory of didkit project\n$ make -C lib ../target/test/aar.stamp\n")),(0,r.kt)("h4",{id:"make-variables"},"Make variables"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ANDROID_SDK_ROOT")," - path to Android SDK. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"~/Android/Sdk")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ANDROID_TOOLS")," - Android tools directory. Default is to pick one matching ",(0,r.kt)("inlineCode",{parentName:"li"},"$(ANDROID_SDK_ROOT)/build-tools/*"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ANDROID_NDK_HOME")," - Android NDK directory. Default is ",(0,r.kt)("inlineCode",{parentName:"li"},"$(ANDROID_SDK_ROOT)/ndk-bundle)")," if exists, or one matching ",(0,r.kt)("inlineCode",{parentName:"li"},"$(ANDROID_SDK_ROOT)/ndk/*"),".")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Tool"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Authentication, Tomcat, CHAPI"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/spruceid/didkit/examples/java-jsp/readme.md"},"Github"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Authentication, Maven, MySQL, Redis"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/spruceid/didkit/examples/java-springboot/readme.md"},"Github"))))))}s.isMDXComponent=!0}}]);