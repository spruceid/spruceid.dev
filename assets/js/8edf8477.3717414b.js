"use strict";(self.webpackChunkdevsite=self.webpackChunkdevsite||[]).push([[1004],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,f=u["".concat(s,".").concat(m)]||u[m]||c[m]||a;return n?i.createElement(f,l(l({ref:t},d),{},{components:n})):i.createElement(f,l({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<a;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5397:(e,t,n)=>{n.r(t),n.d(t,{default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var i=n(7462),r=(n(7294),n(3905));const a={id:"concepts",title:"Core Concepts"},l={unversionedId:"credible/concepts",id:"credible/concepts",isDocsHomePage:!1,title:"Core Concepts",description:"Credible is designed to be a powerful but simple personal wallet for holding",source:"@site/docs/credible/concepts.md",sourceDirName:"credible",slug:"/credible/concepts",permalink:"/docs/credible/concepts",editUrl:"https://github.com/spruceid/spruceid.dev/edit/main/docs/credible/concepts.md",version:"current",frontMatter:{id:"concepts",title:"Core Concepts"},sidebar:"docs",previous:{title:"Installation",permalink:"/docs/credible/install"},next:{title:"Native Software Development Kit",permalink:"/docs/credible/native"}},o=[{value:"High-level explanation of QR Code Logic",id:"high-level-explanation-of-qr-code-logic",children:[]},{value:"CredentialOffer",id:"credentialoffer",children:[{value:"Offer Flow",id:"offer-flow",children:[]}]},{value:"Verifiable Presentation Request",id:"verifiable-presentation-request",children:[{value:"Parameters",id:"parameters",children:[]},{value:"VP Request Flow",id:"vp-request-flow",children:[]}]},{value:"Future Protocols",id:"future-protocols",children:[]}],s={toc:o};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,i.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Credible is designed to be a powerful but simple personal wallet for holding\nverifiable credentials-- and little more. "),(0,r.kt)("h2",{id:"high-level-explanation-of-qr-code-logic"},"High-level explanation of QR Code Logic"),(0,r.kt)("p",null,"All QRCode interactions start as listed below:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"User scans a QRCode containing a URL;"),(0,r.kt)("li",{parentName:"ol"},"User is presented the choice to trust the domain in the URL;"),(0,r.kt)("li",{parentName:"ol"},"App makes a GET request to the URL;")),(0,r.kt)("p",null,"Then, depending on the type of message, one of the following protocols will be\nexecuted."),(0,r.kt)("p",null,"If this all sounds a little esoteric, watch the ",(0,r.kt)("a",{parentName:"p",href:"/docs/credible-examples/qr-issuance"},"example\nvideo")," first. "),(0,r.kt)("h2",{id:"credentialoffer"},"CredentialOffer"),(0,r.kt)("p",null,"If the wallet manages multiple keypairs/subject identifiers, the user will be\nprompted to select one. If no additional subject identifiers are available, the\nwallet will default to the on-device keypair created at time of installation. If\nthis cannot be found, the protocol will throw an exception."),(0,r.kt)("p",null,"After receiving a ",(0,r.kt)("inlineCode",{parentName:"p"},"CredentialOffer")," from a trusted host and selecting (or\ndefaulting to) an identifier to which that credential will be issued, the wallet\napp calls the issuer's API with the selected ",(0,r.kt)("inlineCode",{parentName:"p"},"subject_id"),' in the form body. If\nthe on-device identifier is chosen or defaulted to, it must first be wrapped in\na "DID:Key" object (See glossary), which is derived deterministically from the\nkeypair stored in the ',(0,r.kt)("inlineCode",{parentName:"p"},"FlutterSecureStorage"),", which is backed by ",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/training/articles/keystore"},"KeyStore")," on\nAndroid and ",(0,r.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/security/keychain_services"},"Keychain")," on iOS."),(0,r.kt)("h3",{id:"offer-flow"},"Offer Flow"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note: some features in this flow are currently unstable and may not work as documented.")),(0,r.kt)("p",null,"The flow of events and actions is thus:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"User is presented a credential preview to review, and decides whether or not\nto accept it (coming soon: option to select subject DID if wallet holds\nmultiple)"),(0,r.kt)("li",{parentName:"ol"},"App makes a POST request to the initial URL with ",(0,r.kt)("inlineCode",{parentName:"li"},"subject_id")," set to this\nDID;"),(0,r.kt)("li",{parentName:"ol"},"App receives and stores the new credential in app storage;"),(0,r.kt)("li",{parentName:"ol"},"User is redirect back to the wallet's homepage.")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"swimlane diagram",src:n(4603).Z}),"\n",(0,r.kt)("a",{target:"_blank",href:n(548).Z},"hi-rez swimlane here")),(0,r.kt)("h2",{id:"verifiable-presentation-request"},"Verifiable Presentation Request"),(0,r.kt)("p",null,"After receiving a ",(0,r.kt)("inlineCode",{parentName:"p"},"VerifiablePresentationRequest")," from a trusted host, the\nwallet app calls the requestor's POST API with the ",(0,r.kt)("inlineCode",{parentName:"p"},"presentation")," value set in\nthe body (check out these ",(0,r.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/vc-data-model/#dfn-verifiable-presentations"},"W3C docs"),"\nfor an explanation of presentations and verifiable presentations in VC lingo).\nThis value is a stringified JSON-LD presentation object generated\nfrom the selected credential and signed with the credential's private key using\n",(0,r.kt)("inlineCode",{parentName:"p"},"DIDKit.issuePresentation"),"."),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("p",null,"Here are some of the parameters used to generate a presentation:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"presentation"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," is set to a unique and random ",(0,r.kt)("inlineCode",{parentName:"li"},"UUID.v4")," generated in each ",(0,r.kt)("inlineCode",{parentName:"li"},"issuePresentation")," call;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"holder")," is set to the selected credential's subject (DID);"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"verifiableCredential")," contains the presented credential in stringified JSON-LD form;"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"verificationMethod")," is set to the ",(0,r.kt)("inlineCode",{parentName:"li"},"id")," field in the passed DID's ",(0,r.kt)("inlineCode",{parentName:"li"},"verificationMethod"),";"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"proofPurpose")," only supports 'authentication' for now;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"challenge")," is set to the ",(0,r.kt)("inlineCode",{parentName:"li"},"challenge")," value found in the request;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"domain")," is set to the ",(0,r.kt)("inlineCode",{parentName:"li"},"domain")," value found in the request;"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"key")," is the credential's stored private key;")),(0,r.kt)("h3",{id:"vp-request-flow"},"VP Request Flow"),(0,r.kt)("p",null,"The flow of events and actions is listed below:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"User is presented a presentation request to review and make a decision;"),(0,r.kt)("li",{parentName:"ul"},"App generates ",(0,r.kt)("inlineCode",{parentName:"li"},"didKey")," from the stored private key using ",(0,r.kt)("inlineCode",{parentName:"li"},"DIDKit.keyToDIDKey"),";"),(0,r.kt)("li",{parentName:"ul"},"App issues a presentation using ",(0,r.kt)("inlineCode",{parentName:"li"},"DIDKit.issuePresentation"),";"),(0,r.kt)("li",{parentName:"ul"},"App makes a POST request to the initial URL with the presentation;"),(0,r.kt)("li",{parentName:"ul"},"User is redirect back to the wallet.")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"swimlane diagram",src:n(2619).Z}),"\n",(0,r.kt)("a",{target:"_blank",href:n(7094).Z},"hi-rez swimlane here")),(0,r.kt)("h2",{id:"future-protocols"},"Future Protocols"),(0,r.kt)("p",null,"Coming in future versions (before v1.0)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"DIDComm v2 support"),(0,r.kt)("li",{parentName:"ul"},"Presentation Exchange")),(0,r.kt)("p",null,"Note: Verifiable Presentation requests are presented in the form specified by the current W3C-CCG ",(0,r.kt)("a",{parentName:"p",href:"https://w3c-ccg.github.io/vp-request-spec/"},"VP Request Spec")," draft. As community-wide, vendor-agnostic specifications for Credential/",(0,r.kt)("a",{parentName:"p",href:"https://identity.foundation/presentation-exchange/"},"Presentation Exchange"),", ",(0,r.kt)("a",{parentName:"p",href:"https://w3c-ccg.github.io/universal-wallet-interop-spec/"},"Wallet Portability"),", and DID-based ",(0,r.kt)("a",{parentName:"p",href:"https://identity.foundation/didcomm-messaging/spec/"},"Transport")," come into maturity, we will support them in future versions."))}p.isMDXComponent=!0},548:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/files/credible_swimlane_issuance-51c9a9073193b29969c603155432d71d.png"},7094:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/files/credible_swimlane_vp_request-3b958d111d4b8ddd37551b111bcf85ee.png"},4603:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/credible_swimlane_issuance-51c9a9073193b29969c603155432d71d.png"},2619:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/credible_swimlane_vp_request-3b958d111d4b8ddd37551b111bcf85ee.png"}}]);