"use strict";(self.webpackChunkdevsite=self.webpackChunkdevsite||[]).push([[8786],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=d(n),m=i,h=c["".concat(p,".").concat(m)]||c[m]||u[m]||r;return n?a.createElement(h,l(l({ref:t},s),{},{components:n})):a.createElement(h,l({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var d=2;d<r;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},3159:(e,t,n)=>{n.r(t),n.d(t,{default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var a=n(7462),i=(n(7294),n(3905));const r={id:"svelte-chapi",title:"Svelte CHAPI"},l={unversionedId:"didkit-examples/svelte-chapi",id:"didkit-examples/svelte-chapi",isDocsHomePage:!1,title:"Svelte CHAPI",description:"Source//github.com/spruceid/didkit/tree/main/examples/svelte-chapi-wallet",source:"@site/docs/didkit-examples/example--svelte-chapi.md",sourceDirName:"didkit-examples",slug:"/didkit-examples/svelte-chapi",permalink:"/docs/didkit-examples/svelte-chapi",editUrl:"https://github.com/spruceid/spruceid.dev/edit/main/docs/didkit-examples/example--svelte-chapi.md",version:"current",frontMatter:{id:"svelte-chapi",title:"Svelte CHAPI"},sidebar:"docs",previous:{title:"Spring Boot Java AuthN Service",permalink:"/docs/didkit-examples/java-springboot"},next:{title:"Introducing the Credible Wallet",permalink:"/docs/credible/"}},o=[{value:"Introduction",id:"introduction",children:[]},{value:"Installation",id:"installation",children:[{value:"<code>DIDKit</code>",id:"didkit",children:[]},{value:"Building",id:"building",children:[]},{value:"Running",id:"running",children:[]}]},{value:"Building and running in production mode",id:"building-and-running-in-production-mode",children:[]}],p={toc:o};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Source: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/spruceid/didkit/tree/main/examples/svelte-chapi-wallet"},"https://github.com/spruceid/didkit/tree/main/examples/svelte-chapi-wallet")),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"This project demonstrates how to implement a ",(0,i.kt)("a",{parentName:"p",href:"https://w3c-ccg.github.io/credential-handler-api/"},"CHAPI"),"-conformant Wallet using\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/spruceid/didkit"},(0,i.kt)("inlineCode",{parentName:"a"},"DIDKit"))," compiled to WASM and the Svelte\nweb development framework. It uses did:key as its only DID Method."),(0,i.kt)("p",null,"Features:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Simple listing of credentials"),(0,i.kt)("li",{parentName:"ul"},"Responds to GET and STORE requests",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"[STORE]"," Verifies credentials with DIDKit and stores them."),(0,i.kt)("li",{parentName:"ul"},"[GET]"," Issues VPs generated and signed using DIDKit")))),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("p",null,"To be able to run this example, you will need to build ",(0,i.kt)("inlineCode",{parentName:"p"},"DIDKit")," for the WASM\ntarget. More instructions about the process can be found\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/spruceid/didkit/tree/main/lib/wasm"},"here"),". You will also\nneed the ",(0,i.kt)("a",{parentName:"p",href:"https://yarnpkg.com/"},"Yarn")," package manager."),(0,i.kt)("h3",{id:"didkit"},(0,i.kt)("inlineCode",{parentName:"h3"},"DIDKit")),(0,i.kt)("p",null,"In short, you need to install the ",(0,i.kt)("inlineCode",{parentName:"p"},"wasm-unknown-unknown")," Rust target and\n",(0,i.kt)("inlineCode",{parentName:"p"},"wasm-pack"),", which can be done with the following command on the root of\n",(0,i.kt)("inlineCode",{parentName:"p"},"DIDKit"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ make -C lib install-wasm-pack\n")),(0,i.kt)("h3",{id:"building"},"Building"),(0,i.kt)("p",null,"Then, you have to build the WASM target of ",(0,i.kt)("inlineCode",{parentName:"p"},"DIDKit"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ make -C lib ../target/test/wasm.stamp\n")),(0,i.kt)("p",null,"If everything succeeds, you can proceed to the next step."),(0,i.kt)("h3",{id:"running"},"Running"),(0,i.kt)("p",null,"Install the ",(0,i.kt)("inlineCode",{parentName:"p"},"npm")," dependencies of this example project using the ",(0,i.kt)("a",{parentName:"p",href:"https://yarnpkg.com/"},"Yarn"),"\npackage manager:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ cd examples/svelte-chapi-wallet\n$ yarn install\n")),(0,i.kt)("p",null,"The run the app in development mode with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ yarn run dev\n")),(0,i.kt)("p",null,"You should now be able to see the app running on\n",(0,i.kt)("a",{parentName:"p",href:"http://localhost:5000"},"localhost:5000"),"."),(0,i.kt)("h2",{id:"building-and-running-in-production-mode"},"Building and running in production mode"),(0,i.kt)("p",null,"To create an optimised version of the app:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ yarn run build\n")),(0,i.kt)("p",null,"You can run the newly built app with ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn run start"),". This uses\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/lukeed/sirv"},"sirv"),", which is included in your\npackage.json's ",(0,i.kt)("inlineCode",{parentName:"p"},"dependencies")," so the app will function when deployed to\nplatforms such as ",(0,i.kt)("a",{parentName:"p",href:"https://heroku.com"},"Heroku"),"."))}d.isMDXComponent=!0}}]);