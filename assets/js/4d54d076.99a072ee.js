"use strict";(self.webpackChunkdevsite=self.webpackChunkdevsite||[]).push([[7080],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=o.createContext({}),c=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=c(e.components);return o.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,h=p["".concat(u,".").concat(m)]||p[m]||d[m]||i;return n?o.createElement(h,a(a({ref:t},l),{},{components:n})):o.createElement(h,a({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=p;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2080:function(e,t,n){n.r(t),n.d(t,{default:function(){return d},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var o=n(7462),r=n(3366),i=(n(7294),n(3905)),a=["components"],s={id:"contributing",title:"Contributing"},u={unversionedId:"contributing",id:"contributing",isDocsHomePage:!1,title:"Contributing",description:"Getting Started",source:"@site/docs/contributing.md",sourceDirName:".",slug:"/contributing",permalink:"/docs/contributing",editUrl:"https://github.com/spruceid/spruceid.dev/edit/main/docs/contributing.md",version:"current",frontMatter:{id:"contributing",title:"Contributing"},sidebar:"docs",previous:{title:"Deploying a DID:tz to Tezos Mainnet",permalink:"/docs/credible-examples/did-tz-deploy"},next:{title:"Code of Conduct",permalink:"/docs/code-of-conduct"}},c=[{value:"Getting Started",id:"getting-started",children:[]},{value:"Contributing to the spruceid.dev Developer Portal",id:"contributing-to-the-spruceiddev-developer-portal",children:[{value:"Code blocks",id:"code-blocks",children:[]}]},{value:"Contributor License Agreement",id:"contributor-license-agreement",children:[]},{value:"Attribution Requirement",id:"attribution-requirement",children:[]},{value:"Code Reviews",id:"code-reviews",children:[]},{value:"Contributing to documentation",id:"contributing-to-documentation",children:[]},{value:"Code of Conduct",id:"code-of-conduct",children:[]}],l={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"getting-started"},"Getting Started"),(0,i.kt)("p",null,"We'd love to accept your patches, feature upgrades, and adapters that can make\nDIDKit, Credible, and/or ssi compatible with other SSI systems and legacy\nsystems. To make contributions like these, there are just a few small guidelines\nyou need to follow."),(0,i.kt)("h2",{id:"contributing-to-the-spruceiddev-developer-portal"},"Contributing to the spruceid.dev Developer Portal"),(0,i.kt)("p",null,"This file documents tricks and customizations made to the default docusaurus\nconfiguration for future editors and even open-source contributors."),(0,i.kt)("h3",{id:"code-blocks"},"Code blocks"),(0,i.kt)("p",null,"At the time of the Q3 documentation sprint, docusaurus had not well documented\nthe code block formatting/prettifying, nor provided options for prefixing each\nline. For that reason, we did a little research and found that putting ",(0,i.kt)("inlineCode",{parentName:"p"},"json"),"\nafter the three backticks defining a codeblock enabled JSON-syntax color-coding\nin the block in the underlying code-block formatting library used by docusaurus.\nContributor Maria Villosa also tailored the CSS for bash and shell codeblocks to\ncreate a system for prefixing each line in the CSS such that the $ prefix would\nbe displayed but not copied when a viewer used the copy button."),(0,i.kt)("h4",{id:"code-block-decorators"},"Code block decorators"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"json"),": color-codes standard JSON.  recommended for any code blocks containing\nJSON objects, JWTs, DID Docs, or VCs."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bash"),": adds ",(0,i.kt)("inlineCode",{parentName:"li"},"$")," prefix to each line in display, but not when cut or copied\ninto user's clipboard. monochrome."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"sh"),": displays shell commands without ",(0,i.kt)("inlineCode",{parentName:"li"},"$")," prefix. monochrome."),(0,i.kt)("li",{parentName:"ul"},"for the docusaurus code-block features, such as adding a title (new in v2.0),\nsee ",(0,i.kt)("a",{parentName:"li",href:"https://docusaurus.io/docs/markdown-features/code-blocks#code-title"},"the docusaurus\ndocs")),(0,i.kt)("li",{parentName:"ul"},"for a list of language-specific syntax templates, see ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/FormidableLabs/prism-react-renderer/blob/master/src/vendor/prism/includeLangs.js"},"this JS\nfile"),"\nin the underlying\n",(0,i.kt)("a",{parentName:"li",href:"https://github.com/FormidableLabs/prism-react-renderer/"},"prism")," repo.\nIncluded at time of press:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"{ markup | bash | c | css | javascript | jsx | git | go | graphql | json |\nmakefile | markdown | objectivec | ocaml | python | sql | typescript | wasm\n| yaml }"))))),(0,i.kt)("h2",{id:"contributor-license-agreement"},"Contributor License Agreement"),(0,i.kt)("p",null,"Contributions to Spruce's OS projects must be accompanied by a Contributor\nLicense Agreement. (Don't worry about signing a CLA just for documentation bugs and\nrequests, those are not licensed the same way as our software releases)."),(0,i.kt)("p",null,'By signing a "CLA", you (and/or your employer) retain all copyrights to your\ncontribution; this simply gives us permission to use and redistribute your\ncontributions as part of the project and, if necessary, update the project\'s\nlicensing without having to track down all contributors for explicit consent.'),(0,i.kt)("p",null,"Please note that there are two distinct contributor agreements: a ",(0,i.kt)("a",{parentName:"p",href:"https://spruceid.dev/assets/spruce-corporate-cla.pdf"},"Corporate\nCLA")," and an ",(0,i.kt)("a",{parentName:"p",href:"https://spruceid.dev/assets/spruce-individual-cla.pdf"},"Individual CLA"),". If your employment contract gives blanket or\nscoped control and ownership of your contributions to your employer (as almost\nall do in the modern software industry), the corporate contributor agreement is\nrecommended. Please check with your employer, counsel, or HR staff if you\nhave any questions about what you are signing or on whose behalf. Do not sign an\nindividual CLA unless you are certain it does not contradict a pre-existing\ncontract with your employer."),(0,i.kt)("p",null,"You generally only need to submit a CLA to Spruce once, so if you've already\nsubmitted one (even if it was for a different Spruce project), you don't need to\ndo it again. Within two business days of being received, the submitted github\nhandle(s) will be added to the allowlist for all our repos."),(0,i.kt)("h2",{id:"attribution-requirement"},"Attribution Requirement"),(0,i.kt)("p",null,"If you are not the sole contributor to a contribution (pull request), please\nidentify all contributors in the pull request comment."),(0,i.kt)("p",null,"To add a contributor (other than yourself, that's automatic), mark them one per\nline as follows:"),(0,i.kt)("p",null,"+@github_username"),(0,i.kt)("p",null,"If you added a contributor by mistake, you can remove them in a comment with:"),(0,i.kt)("p",null,"-@github_username"),(0,i.kt)("p",null,"If you are making a pull request on behalf of someone else but you had no part\nin designing the feature, you can remove yourself with the above syntax. This\nupdates the list of contributors to a given PR that must be checked against the\nCLA signees list to be accepted."),(0,i.kt)("h2",{id:"code-reviews"},"Code Reviews"),(0,i.kt)("p",null,"All submissions, including submissions by full-time Spruce employees, require\nreview. We use GitHub pull requests for this purpose. Consult ",(0,i.kt)("a",{parentName:"p",href:"https://help.github.com/articles/about-pull-requests/"},"GitHub\nHelp")," for more\ninformation on using pull requests. You may tag oustide reviewers additionally,\nbut review by Spruce is still the condition of acceptance."),(0,i.kt)("h2",{id:"contributing-to-documentation"},"Contributing to documentation"),(0,i.kt)("p",null,"Purely editorial submissions to the git repositories or contributions to this website do not require a CLA, and are warmly welcome. Note that in the case of contributions to the developer documentation website, there are tips in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/spruceid/spruceid.dev/main/_process.md"},"_process.md file")),(0,i.kt)("h2",{id:"code-of-conduct"},"Code of Conduct"),(0,i.kt)("p",null,"All our OS projects follows Spruce's overall ",(0,i.kt)("a",{parentName:"p",href:"https://spruceid.dev/docs/code-of-conduct"},"Code of Conduct"),"."))}d.isMDXComponent=!0}}]);